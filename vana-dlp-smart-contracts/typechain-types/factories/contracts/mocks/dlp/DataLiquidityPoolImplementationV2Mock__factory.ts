/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DataLiquidityPoolImplementationV2Mock,
  DataLiquidityPoolImplementationV2MockInterface,
} from "../../../../contracts/mocks/dlp/DataLiquidityPoolImplementationV2Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "FileAlreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAttestator",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
    ],
    name: "FileInvalidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFileRewardFactor",
        type: "uint256",
      },
    ],
    name: "FileRewardFactorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
    ],
    name: "FileValidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newMasterKey",
        type: "string",
      },
    ],
    name: "MasterKeyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newProofInstruction",
        type: "string",
      },
    ],
    name: "ProofInstructionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proofIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "RewardRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contributorsRewardAmount",
        type: "uint256",
      },
    ],
    name: "addRewardsForContributors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "contributorFiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proofIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPool.FileResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
    ],
    name: "contributorInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contributorAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "filesListCount",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPool.ContributorInfoResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "contributors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contributorAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "filesListCount",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPool.ContributorInfoResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contributorsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dataRegistry",
    outputs: [
      {
        internalType: "contract IDataRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fileRewardFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
    ],
    name: "files",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proofIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPool.FileResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "filesListAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "filesListCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "dataRegistryAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "teePoolAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "masterKey",
            type: "string",
          },
          {
            internalType: "string",
            name: "proofInstruction",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileRewardFactor",
            type: "uint256",
          },
        ],
        internalType: "struct DataLiquidityPoolImplementation.InitParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "masterKey",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofInstruction",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proofIndex",
        type: "uint256",
      },
    ],
    name: "requestReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "teePool",
    outputs: [
      {
        internalType: "contract ITeePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "test",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalContributorsRewardAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFileRewardFactor",
        type: "uint256",
      },
    ],
    name: "updateFileRewardFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newMasterKey",
        type: "string",
      },
    ],
    name: "updateMasterKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newProofInstruction",
        type: "string",
      },
    ],
    name: "updateProofInstruction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTeePool",
        type: "address",
      },
    ],
    name: "updateTeePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000da565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000775760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612939620001046000396000818161142901528181611452015261163001526129396000f3fe60806040526004361061020f5760003560e01c806379ba509711610118578063ad3cb1cc116100a0578063e30c39781161006f578063e30c397814610612578063f2fde38b14610627578063f4c714b414610647578063f8a8fd6d14610667578063fc0c546a1461069457600080fd5b8063ad3cb1cc14610558578063b3aa4e7b14610589578063c41d3b63146105dc578063d503d4e4146105f257600080fd5b80638afe35b9116100e75780638afe35b9146104b35780638da5cb5b146104c8578063a39c1d6b146104f5578063ab049ffd14610515578063ac9650d81461052b57600080fd5b806379ba5097146104545780637ba24aa5146104695780637ccf35a6146104895780638456cb591461049e57600080fd5b80634f1ef2861161019b57806354fd4d501161016a57806354fd4d50146103c55780635c975abb146103d957806362baff9f14610409578063715018a6146104295780637569b3d71461043e57600080fd5b80634f1ef2861461035d5780634f33f79d146103705780635062bc5a1461039057806352d1902d146103b057600080fd5b80633b3cd378116101e25780633b3cd378146102965780633cb5d100146102c45780633f4ba83a146103085780633f76c7cb1461031d5780634b545f3a1461033d57600080fd5b806306fdde0314610214578063084a09da1461023f5780631201c547146102545780631a8bcb1d14610276575b600080fd5b34801561022057600080fd5b506102296106b4565b6040516102369190611d4b565b60405180910390f35b34801561024b57600080fd5b50610229610742565b34801561026057600080fd5b5061027461026f366004611d5e565b61074f565b005b34801561028257600080fd5b50610274610291366004611d5e565b61079e565b3480156102a257600080fd5b506102b66102b1366004611d5e565b6107e2565b604051908152602001610236565b3480156102d057600080fd5b506102e46102df366004611d5e565b6107f5565b6040805182516001600160a01b031681526020928301519281019290925201610236565b34801561031457600080fd5b5061027461082a565b34801561032957600080fd5b50610274610338366004611ed4565b61083c565b34801561034957600080fd5b506102e4610358366004611fda565b6109f8565b61027461036b366004611ff7565b610a47565b34801561037c57600080fd5b5061027461038b366004611fda565b610a66565b34801561039c57600080fd5b506102746103ab36600461205a565b610a90565b3480156103bc57600080fd5b506102b6610e96565b3480156103d157600080fd5b5060026102b6565b3480156103e557600080fd5b506000805160206128c48339815191525460ff166040519015158152602001610236565b34801561041557600080fd5b5061027461042436600461207c565b610eb3565b34801561043557600080fd5b50610274610f06565b34801561044a57600080fd5b506102b6600a5481565b34801561046057600080fd5b50610274610f18565b34801561047557600080fd5b5061027461048436600461207c565b610f62565b34801561049557600080fd5b506102b6610fa9565b3480156104aa57600080fd5b50610274610fba565b3480156104bf57600080fd5b50610229610fca565b3480156104d457600080fd5b506104dd610fd7565b6040516001600160a01b039091168152602001610236565b34801561050157600080fd5b506001546104dd906001600160a01b031681565b34801561052157600080fd5b506102b660065481565b34801561053757600080fd5b5061054b6105463660046120ed565b61100c565b604051610236919061214f565b34801561056457600080fd5b50610229604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561059557600080fd5b506105a96105a43660046121b3565b6110f3565b60405161023691908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b3480156105e857600080fd5b506102b660055481565b3480156105fe57600080fd5b50600d546104dd906001600160a01b031681565b34801561061e57600080fd5b506104dd61114b565b34801561063357600080fd5b50610274610642366004611fda565b611174565b34801561065357600080fd5b506105a9610662366004611d5e565b6111f9565b34801561067357600080fd5b506040805180820190915260048152631d195cdd60e21b6020820152610229565b3480156106a057600080fd5b506002546104dd906001600160a01b031681565b600080546106c1906121df565b80601f01602080910402602001604051908101604052809291908181526020018280546106ed906121df565b801561073a5780601f1061070f5761010080835404028352916020019161073a565b820191906000526020600020905b81548152906001019060200180831161071d57829003601f168201915b505050505081565b600480546106c1906121df565b610757611263565b60025461076f906001600160a01b031633308461129b565b8060056000828254610781919061222f565b909155505060016000805160206128e48339815191525550565b50565b6107a661131c565b60068190556040518181527f49713882dce7cebaf1e95b21d928f97374855c5adfabf73652b8230de06e4779906020015b60405180910390a150565b60006107ef60088361134e565b92915050565b60408051808201909152600080825260208201526000828152600b60205260409020546107ef906001600160a01b03166109f8565b61083261131c565b61083a61135a565b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156108815750825b90506000826001600160401b0316600114801561089d5750303b155b9050811580156108ab575080155b156108c95760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156108f357845460ff60401b1916600160401b1785555b6108fb6113b4565b6109036113b4565b61090b6113bc565b6109136113cc565b6080860151600090610925908261228a565b506040860151600180546001600160a01b039283166001600160a01b0319918216179091556020880151600280549184169183169190911790556060880151600d805491909316911617905560a0860151600390610983908261228a565b5060c0860151600490610996908261228a565b5060e086015160065585516109aa906113dc565b83156109f057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b60408051808201909152600080825260208201526040805180820182526001600160a01b0384168082526000908152600c60209081529290209091820190610a3f90611414565b905292915050565b610a4f61141e565b610a58826114c3565b610a6282826114cb565b5050565b610a6e61131c565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b610a9861158d565b610aa0611263565b60015460405163dbda68db60e01b815260048101849052602481018390526000916001600160a01b03169063dbda68db90604401600060405180830381865afa158015610af1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b199190810190612399565b90506004604051610b2a91906124c7565b60405180910390208160200151608001518051906020012014610b60576040516309bde33960e01b815260040160405180910390fd5b6000838152600760205260409020600281015415610b9157604051631441154d60e31b815260040160405180910390fd5b600154604051633d31c52d60e21b8152600481018690526000916001600160a01b03169063f4c714b490602401600060405180830381865afa158015610bdb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c03919081019061253d565b6040808201516020808701518051818301518286015160608401516080909401519651979850600097610c3e979395929491939192016125e9565b6040516020818303038152906040528051906020012090506000610c9d8560000151610c97847f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b906115be565b600d54604051630a7016f760e41b81526001600160a01b03808416600483015292935091169063a7016f7090602401602060405180830381865afa158015610ce9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0d9190612658565b610d2a576040516348614b9f60e11b815260040160405180910390fd5b42845560018401869055602085015151600654670de0b6b3a764000091610d509161267a565b610d5a9190612691565b6002850155610d6a6008886115e8565b506020808401516001600160a01b03166000908152600c90915260409020610d9281896115e8565b5060208401516002808701549054610db5926001600160a01b03909116916115f4565b846002015460056000828254610dcb91906126b3565b90915550610dda905081611414565b600103610e2c57600a8054906000610df1836126c6565b9091555050602084810151600a546000908152600b909252604090912080546001600160a01b0319166001600160a01b039092169190911790555b868885602001516001600160a01b03167fc79b2d4186d26cf06f3e1a252e47fb477392229c39da486f16d9285961fdd9fe8860020154604051610e7191815260200190565b60405180910390a4505050505050610a6260016000805160206128e483398151915255565b6000610ea0611625565b506000805160206128a483398151915290565b610ebb61131c565b6003610ec88284836126df565b507fcf6a9cc9de7d6a2f9488bac950d70cd0eff6bd12d21289198406960d6003de218282604051610efa92919061279f565b60405180910390a15050565b610f0e61131c565b61083a60006113dc565b3380610f2261114b565b6001600160a01b031614610f595760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61079b816113dc565b610f6a61131c565b6004610f778284836126df565b507fba416802d8f8c88a69872ea24a6897e9c3b8bdf72487c62ab999954782a877318282604051610efa92919061279f565b6000610fb56008611414565b905090565b610fc261131c565b61083a61166e565b600380546106c1906121df565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b604080516000815260208101909152606090826001600160401b0381111561103657611036611d77565b60405190808252806020026020018201604052801561106957816020015b60608152602001906001900390816110545790505b50915060005b838110156110eb576110c63086868481811061108d5761108d6127ce565b905060200281019061109f91906127e4565b856040516020016110b293929190612831565b6040516020818303038152906040526116b7565b8382815181106110d8576110d86127ce565b602090810291909101015260010161106f565b505092915050565b61111e6040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b0383166000908152600c6020526040902061114490610662908461134e565b9392505050565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610ffc565b61117c61131c565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b03831690811782556111c0610fd7565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b6112246040518060800160405280600081526020016000815260200160008152602001600081525090565b50600081815260076020908152604091829020825160808101845293845280549184019190915260018101549183019190915260020154606082015290565b6000805160206128e483398151915280546001190161129557604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b6040516001600160a01b0384811660248301528381166044830152606482018390526113029186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061172d565b50505050565b60016000805160206128e483398151915255565b33611325610fd7565b6001600160a01b03161461083a5760405163118cdaa760e01b8152336004820152602401610f50565b60006111448383611790565b6113626117ba565b6000805160206128c4833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b0390911681526020016107d7565b61083a6117ea565b6113c46117ea565b61083a611833565b6113d46117ea565b61083a61183b565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610a628261185c565b60006107ef825490565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806114a557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166114996000805160206128a4833981519152546001600160a01b031690565b6001600160a01b031614155b1561083a5760405163703e46dd60e11b815260040160405180910390fd5b61079b61131c565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611525575060408051601f3d908101601f1916820190925261152291810190612858565b60015b61154d57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610f50565b6000805160206128a4833981519152811461157e57604051632a87526960e21b815260048101829052602401610f50565b61158883836118cd565b505050565b6000805160206128c48339815191525460ff161561083a5760405163d93c066560e01b815260040160405180910390fd5b6000806000806115ce8686611923565b9250925092506115de8282611970565b5090949350505050565b60006111448383611a29565b6040516001600160a01b0383811660248301526044820183905261158891859182169063a9059cbb906064016112d0565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461083a5760405163703e46dd60e11b815260040160405180910390fd5b61167661158d565b6000805160206128c4833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583361139c565b6060600080846001600160a01b0316846040516116d49190612871565b600060405180830381855af49150503d806000811461170f576040519150601f19603f3d011682016040523d82523d6000602084013e611714565b606091505b5091509150611724858383611a78565b95945050505050565b60006117426001600160a01b03841683611ad4565b905080516000141580156117675750808060200190518101906117659190612658565b155b1561158857604051635274afe760e01b81526001600160a01b0384166004820152602401610f50565b60008260000182815481106117a7576117a76127ce565b9060005260206000200154905092915050565b6000805160206128c48339815191525460ff1661083a57604051638dfc202b60e01b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661083a57604051631afcd79f60e31b815260040160405180910390fd5b6113086117ea565b6118436117ea565b6000805160206128c4833981519152805460ff19169055565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6118d682611ae2565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561191b5761158882826116b7565b610a62611b47565b6000806000835160410361195d5760208401516040850151606086015160001a61194f88828585611b66565b955095509550505050611969565b50508151600091506002905b9250925092565b60008260038111156119845761198461288d565b0361198d575050565b60018260038111156119a1576119a161288d565b036119bf5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156119d3576119d361288d565b036119f45760405163fce698f760e01b815260048101829052602401610f50565b6003826003811115611a0857611a0861288d565b03610a62576040516335e2f38360e21b815260048101829052602401610f50565b6000818152600183016020526040812054611a70575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107ef565b5060006107ef565b606082611a8d57611a8882611c35565b611144565b8151158015611aa457506001600160a01b0384163b155b15611acd57604051639996b31560e01b81526001600160a01b0385166004820152602401610f50565b5092915050565b606061114483836000611c5e565b806001600160a01b03163b600003611b1857604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610f50565b6000805160206128a483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b341561083a5760405163b398979f60e01b815260040160405180910390fd5b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611ba15750600091506003905082611c2b565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611bf5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611c2157506000925060019150829050611c2b565b9250600091508190505b9450945094915050565b805115611c455780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b606081471015611c835760405163cd78605960e01b8152306004820152602401610f50565b600080856001600160a01b03168486604051611c9f9190612871565b60006040518083038185875af1925050503d8060008114611cdc576040519150601f19603f3d011682016040523d82523d6000602084013e611ce1565b606091505b5091509150611cf1868383611a78565b9695505050505050565b60005b83811015611d16578181015183820152602001611cfe565b50506000910152565b60008151808452611d37816020860160208601611cfb565b601f01601f19169290920160200192915050565b6020815260006111446020830184611d1f565b600060208284031215611d7057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715611db057611db0611d77565b60405290565b604080519081016001600160401b0381118282101715611db057611db0611d77565b60405160a081016001600160401b0381118282101715611db057611db0611d77565b604051601f8201601f191681016001600160401b0381118282101715611e2257611e22611d77565b604052919050565b6001600160a01b038116811461079b57600080fd5b8035611e4a81611e2a565b919050565b60006001600160401b03821115611e6857611e68611d77565b50601f01601f191660200190565b6000611e89611e8484611e4f565b611dfa565b9050828152838383011115611e9d57600080fd5b828260208301376000602084830101529392505050565b600082601f830112611ec557600080fd5b61114483833560208501611e76565b600060208284031215611ee657600080fd5b81356001600160401b0380821115611efd57600080fd5b908301906101008286031215611f1257600080fd5b611f1a611d8d565b611f2383611e3f565b8152611f3160208401611e3f565b6020820152611f4260408401611e3f565b6040820152611f5360608401611e3f565b6060820152608083013582811115611f6a57600080fd5b611f7687828601611eb4565b60808301525060a083013582811115611f8e57600080fd5b611f9a87828601611eb4565b60a08301525060c083013582811115611fb257600080fd5b611fbe87828601611eb4565b60c08301525060e083013560e082015280935050505092915050565b600060208284031215611fec57600080fd5b813561114481611e2a565b6000806040838503121561200a57600080fd5b823561201581611e2a565b915060208301356001600160401b0381111561203057600080fd5b8301601f8101851361204157600080fd5b61205085823560208401611e76565b9150509250929050565b6000806040838503121561206d57600080fd5b50508035926020909101359150565b6000806020838503121561208f57600080fd5b82356001600160401b03808211156120a657600080fd5b818501915085601f8301126120ba57600080fd5b8135818111156120c957600080fd5b8660208285010111156120db57600080fd5b60209290920196919550909350505050565b6000806020838503121561210057600080fd5b82356001600160401b038082111561211757600080fd5b818501915085601f83011261212b57600080fd5b81358181111561213a57600080fd5b8660208260051b85010111156120db57600080fd5b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b828110156121a657603f19888603018452612194858351611d1f565b94509285019290850190600101612178565b5092979650505050505050565b600080604083850312156121c657600080fd5b82356121d181611e2a565b946020939093013593505050565b600181811c908216806121f357607f821691505b60208210810361221357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107ef576107ef612219565b601f821115611588576000816000526020600020601f850160051c8101602086101561226b5750805b601f850160051c820191505b818110156109f057828155600101612277565b81516001600160401b038111156122a3576122a3611d77565b6122b7816122b184546121df565b84612242565b602080601f8311600181146122ec57600084156122d45750858301515b600019600386901b1c1916600185901b1785556109f0565b600085815260208120601f198616915b8281101561231b578886015182559484019460019091019084016122fc565b50858210156123395787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000612357611e8484611e4f565b905082815283838301111561236b57600080fd5b611144836020830184611cfb565b600082601f83011261238a57600080fd5b61114483835160208501612349565b600060208083850312156123ac57600080fd5b82516001600160401b03808211156123c357600080fd5b90840190604082870312156123d757600080fd5b6123df611db6565b8251828111156123ee57600080fd5b8301601f810188136123ff57600080fd5b61240d888251878401612349565b825250838301518281111561242157600080fd5b929092019160a0838803121561243657600080fd5b61243e611dd8565b83518152848401518582015260408401518381111561245c57600080fd5b61246889828701612379565b60408301525060608401518381111561248057600080fd5b61248c89828701612379565b6060830152506080840151838111156124a457600080fd5b6124b089828701612379565b608083015250938101939093525090949350505050565b60008083546124d5816121df565b600182811680156124ed576001811461250257612531565b60ff1984168752821515830287019450612531565b8760005260208060002060005b858110156125285781548a82015290840190820161250f565b50505082870194505b50929695505050505050565b60006020828403121561254f57600080fd5b81516001600160401b038082111561256657600080fd5b908301906080828603121561257a57600080fd5b60405160808101818110838211171561259557612595611d77565b6040528251815260208301516125aa81611e2a565b60208201526040830151828111156125c157600080fd5b6125cd87828601612379565b6040830152506060830151606082015280935050505092915050565b600087516125fb818460208c01611cfb565b8083019050878152866020820152855161261c816040840160208a01611cfb565b8551910190612632816040840160208901611cfb565b8451910190612648816040840160208801611cfb565b0160400198975050505050505050565b60006020828403121561266a57600080fd5b8151801515811461114457600080fd5b80820281158282048414176107ef576107ef612219565b6000826126ae57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156107ef576107ef612219565b6000600182016126d8576126d8612219565b5060010190565b6001600160401b038311156126f6576126f6611d77565b61270a8361270483546121df565b83612242565b6000601f84116001811461273e57600085156127265750838201355b600019600387901b1c1916600186901b178355612798565b600083815260209020601f19861690835b8281101561276f578685013582556020948501946001909201910161274f565b508682101561278c5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126127fb57600080fd5b8301803591506001600160401b0382111561281557600080fd5b60200191503681900382131561282a57600080fd5b9250929050565b82848237600083820160008152835161284e818360208801611cfb565b0195945050505050565b60006020828403121561286a57600080fd5b5051919050565b60008251612883818460208701611cfb565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a264697066735822122073248be71cc24d200c77e7863eec756e885fae2186f03ce58c75644cf60ebcda64736f6c63430008180033";

type DataLiquidityPoolImplementationV2MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataLiquidityPoolImplementationV2MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataLiquidityPoolImplementationV2Mock__factory extends ContractFactory {
  constructor(...args: DataLiquidityPoolImplementationV2MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DataLiquidityPoolImplementationV2Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DataLiquidityPoolImplementationV2Mock__factory {
    return super.connect(
      runner
    ) as DataLiquidityPoolImplementationV2Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataLiquidityPoolImplementationV2MockInterface {
    return new Interface(
      _abi
    ) as DataLiquidityPoolImplementationV2MockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DataLiquidityPoolImplementationV2Mock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DataLiquidityPoolImplementationV2Mock;
  }
}
