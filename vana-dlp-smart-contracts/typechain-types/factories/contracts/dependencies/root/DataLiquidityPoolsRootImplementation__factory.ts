/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DataLiquidityPoolsRootImplementation,
  DataLiquidityPoolsRootImplementationInterface,
} from "../../../../contracts/dependencies/root/DataLiquidityPoolsRootImplementation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyDistributed",
    type: "error",
  },
  {
    inputs: [],
    name: "ArityMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "CheckpointUnorderedInsertion",
    type: "error",
  },
  {
    inputs: [],
    name: "CurrentEpochNotCreated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "EpochEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "EpochFinalised",
    type: "error",
  },
  {
    inputs: [],
    name: "EpochNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "EpochNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDlpList",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDlpStatus",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPerformancePercentages",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStakeAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStakersPercentage",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUnstakeAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotDlpOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToClaim",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "PreviousEpochNotFinalised",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "bits",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SafeCastOverflowedUintDowncast",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyDlps",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
    ],
    name: "DlpDeregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dlpAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
    ],
    name: "DlpRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakersPercentage",
        type: "uint256",
      },
    ],
    name: "DlpStakersPercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "epochId",
        type: "uint256",
      },
    ],
    name: "EpochCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "epochId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isFinalised",
        type: "bool",
      },
    ],
    name: "EpochPerformancesSaved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newEpochRewardAmount",
        type: "uint256",
      },
    ],
    name: "EpochRewardAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newEpochSize",
        type: "uint256",
      },
    ],
    name: "EpochSizeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxNumberOfRegisteredDlps",
        type: "uint256",
      },
    ],
    name: "MaxNumberOfRegisteredDlpsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMinDlpStakeAmount",
        type: "uint256",
      },
    ],
    name: "MinDlpStakeAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newNumberOfTopDlps",
        type: "uint256",
      },
    ],
    name: "NumberOfTopDlpsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newTtfPercentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newTfcPercentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVduPercentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newUwPercentage",
        type: "uint256",
      },
    ],
    name: "PerformancePercentagesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epochId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
    ],
    name: "StakerDlpEpochRewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addRewardForDlps",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastEpochToClaim",
        type: "uint256",
      },
    ],
    name: "claimRewardUntilEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
    ],
    name: "claimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createEpochs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "createEpochsUntilBlockNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
    ],
    name: "deregisterDlp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dlpOwnerAmount",
        type: "uint256",
      },
    ],
    name: "distributeStakeAfterDeregistration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "epochId",
        type: "uint256",
      },
    ],
    name: "dlpEpochs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "ttf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tfc",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vdu",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uw",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isTopDlp",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "rewardAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakersPercentage",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPoolsRoot.DlpEpochInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dlpAddress",
        type: "address",
      },
    ],
    name: "dlpIds",
    outputs: [
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
    ],
    name: "dlps",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dlpAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "enum IDataLiquidityPoolsRoot.DlpStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "registrationBlockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "grantedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakersPercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPoolsRoot.DlpResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dlpAddress",
        type: "address",
      },
    ],
    name: "dlpsByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dlpAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "enum IDataLiquidityPoolsRoot.DlpStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "registrationBlockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "grantedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakersPercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPoolsRoot.DlpResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dlpsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochRewardAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epochId",
        type: "uint256",
      },
    ],
    name: "epochs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isFinalised",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "dlpIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct IDataLiquidityPoolsRoot.EpochInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
    ],
    name: "estimatedDlpReward",
    outputs: [
      {
        internalType: "uint256",
        name: "historyRewardEstimation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeRewardEstimation",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxNumberOfRegisteredDlps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfTopDlps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDlpStakeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "epochSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "epochRewardAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ttfPercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tfcPercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vduPercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uwPercentage",
            type: "uint256",
          },
        ],
        internalType: "struct DataLiquidityPoolsRootImplementation.InitParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxNumberOfRegisteredDlps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDlpStakeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfTopDlps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dlpAddress",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "dlpOwnerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stakersPercentage",
        type: "uint256",
      },
    ],
    name: "registerDlp",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dlpAddress",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "dlpOwnerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stakersPercentage",
        type: "uint256",
      },
    ],
    name: "registerDlpWithGrant",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "registeredDlps",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epochId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "dlpId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ttf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tfc",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vdu",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uw",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPoolsRoot.DlpPerformance[]",
        name: "dlpPerformances",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "isFinalised",
        type: "bool",
      },
    ],
    name: "saveEpochPerformances",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "epochId",
        type: "uint256",
      },
    ],
    name: "stakerDlpEpochs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "dlpId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "epochId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPoolsRoot.StakerDlpEpochInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
    ],
    name: "stakerDlps",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "dlpId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastClaimedEpochId",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPoolsRoot.StakerDlpInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
    ],
    name: "stakerDlpsList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "dlpId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastClaimedEpochId",
            type: "uint256",
          },
        ],
        internalType: "struct IDataLiquidityPoolsRoot.StakerDlpInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "stakerDlpsListCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tfcPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numberOfDlps",
        type: "uint256",
      },
    ],
    name: "topDlpIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDlpsRewardAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ttfPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
    ],
    name: "unstakebleAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dlpId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakersPercentage",
        type: "uint256",
      },
    ],
    name: "updateDlpStakersPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newEpochRewardAmount",
        type: "uint256",
      },
    ],
    name: "updateEpochRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newEpochSize",
        type: "uint256",
      },
    ],
    name: "updateEpochSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxNumberOfRegisteredDlps",
        type: "uint256",
      },
    ],
    name: "updateMaxNumberOfRegisteredDlps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMinDlpStakeAmount",
        type: "uint256",
      },
    ],
    name: "updateMinDlpStakeAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newNumberOfTopDlps",
        type: "uint256",
      },
    ],
    name: "updateNumberOfTopDlps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newTtfPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newTfcPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newVduPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newUwPercentage",
        type: "uint256",
      },
    ],
    name: "updatePerformancePercentages",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "uwPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vduPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type DataLiquidityPoolsRootImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataLiquidityPoolsRootImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataLiquidityPoolsRootImplementation__factory extends ContractFactory {
  constructor(...args: DataLiquidityPoolsRootImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DataLiquidityPoolsRootImplementation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DataLiquidityPoolsRootImplementation__factory {
    return super.connect(
      runner
    ) as DataLiquidityPoolsRootImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataLiquidityPoolsRootImplementationInterface {
    return new Interface(_abi) as DataLiquidityPoolsRootImplementationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DataLiquidityPoolsRootImplementation {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DataLiquidityPoolsRootImplementation;
  }
}
