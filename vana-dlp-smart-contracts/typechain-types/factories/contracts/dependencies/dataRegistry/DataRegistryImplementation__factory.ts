/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DataRegistryImplementation,
  DataRegistryImplementationInterface,
} from "../../../../contracts/dependencies/dataRegistry/DataRegistryImplementation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotFileOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "FileAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PermissionGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proofIndex",
        type: "uint256",
      },
    ],
    name: "ProofAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "addFile",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "addFilePermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
        ],
        internalType: "struct IDataRegistry.Permission[]",
        name: "permissions",
        type: "tuple[]",
      },
    ],
    name: "addFileWithPermissions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "score",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dlpId",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
              {
                internalType: "string",
                name: "proofUrl",
                type: "string",
              },
              {
                internalType: "string",
                name: "instruction",
                type: "string",
              },
            ],
            internalType: "struct IDataRegistry.ProofData",
            name: "data",
            type: "tuple",
          },
        ],
        internalType: "struct IDataRegistry.Proof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "addProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "filePermissions",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "fileProofs",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "score",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dlpId",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
              {
                internalType: "string",
                name: "proofUrl",
                type: "string",
              },
              {
                internalType: "string",
                name: "instruction",
                type: "string",
              },
            ],
            internalType: "struct IDataRegistry.ProofData",
            name: "data",
            type: "tuple",
          },
        ],
        internalType: "struct IDataRegistry.Proof",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
    ],
    name: "files",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "addedAtBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IDataRegistry.FileResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "filesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611cfe6100fd60003960008181610e5a01528181610e830152610fc90152611cfe6000f3fe60806040526004361061012a5760003560e01c8063ad3cb1cc116100ab578063dfb5e9ba1161006f578063dfb5e9ba1461031c578063e30c397814610332578063eb9b9b6414610347578063f2fde38b14610367578063f4c714b414610387578063f75cf867146103b457600080fd5b8063ad3cb1cc1461025e578063afbfc1561461028f578063c26045f7146102af578063c4d66de8146102cf578063dbda68db146102ef57600080fd5b806360f1c43a116100f257806360f1c43a146101c5578063715018a6146101f257806379ba5097146102075780638456cb591461021c5780638da5cb5b1461023157600080fd5b80633f4ba83a1461012f5780634f1ef2861461014657806352d1902d1461015957806354fd4d50146101815780635c975abb14610195575b600080fd5b34801561013b57600080fd5b506101446103d4565b005b6101446101543660046115c8565b6103e6565b34801561016557600080fd5b5061016e610405565b6040519081526020015b60405180910390f35b34801561018d57600080fd5b50600161016e565b3480156101a157600080fd5b50600080516020611ca98339815191525460ff166040519015158152602001610178565b3480156101d157600080fd5b506101e56101e0366004611616565b610422565b6040516101789190611692565b3480156101fe57600080fd5b506101446104dc565b34801561021357600080fd5b506101446104ee565b34801561022857600080fd5b5061014461053b565b34801561023d57600080fd5b5061024661054b565b6040516001600160a01b039091168152602001610178565b34801561026a57600080fd5b506101e5604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561029b57600080fd5b5061016e6102aa3660046116a5565b610580565b3480156102bb57600080fd5b506101446102ca3660046117e0565b610683565b3480156102db57600080fd5b506101446102ea366004611907565b610771565b3480156102fb57600080fd5b5061030f61030a366004611922565b610899565b6040516101789190611944565b34801561032857600080fd5b5061016e60005481565b34801561033e57600080fd5b50610246610b3d565b34801561035357600080fd5b5061016e6103623660046119d9565b610b66565b34801561037357600080fd5b50610144610382366004611907565b610b82565b34801561039357600080fd5b506103a76103a2366004611a16565b610c07565b6040516101789190611a2f565b3480156103c057600080fd5b506101446103cf366004611a7d565b610d13565b6103dc610dbd565b6103e4610def565b565b6103ee610e4f565b6103f782610ef4565b6104018282610efc565b5050565b600061040f610fbe565b50600080516020611c8983398151915290565b60008281526001602090815260408083206001600160a01b0385168452600501909152902080546060919061045690611ad4565b80601f016020809104026020016040519081016040528092919081815260200182805461048290611ad4565b80156104cf5780601f106104a4576101008083540402835291602001916104cf565b820191906000526020600020905b8154815290600101906020018083116104b257829003601f168201915b5050505050905092915050565b6104e4610dbd565b6103e46000611007565b33806104f8610b3d565b6001600160a01b03161461052f5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61053881611007565b50565b610543610dbd565b6103e461103f565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b60008061058d8585611088565b905060005b8351811015610678578381815181106105ad576105ad611b0e565b6020026020010151602001516001600084815260200190815260200160002060050160008684815181106105e3576105e3611b0e565b6020026020010151600001516001600160a01b03166001600160a01b03168152602001908152602001600020908161061b9190611b6c565b5083818151811061062e5761062e611b0e565b6020026020010151600001516001600160a01b0316827f6e0403ef2b13328247bf9260ad8dd9c18fb5a18b95ea25de817ca991da05929b60405160405180910390a3600101610592565b5090505b9392505050565b61068b61113c565b6000828152600160205260408120600301805482906106a990611c2c565b9182905550600084815260016020908152604080832084845260040190915290208351919250839181906106dd9082611b6c565b50602082015181600101600082015181600001556020820151816001015560408201518160020190816107109190611b6c565b50606082015160038201906107259082611b6c565b506080820151600482019061073a9082611b6c565b50506040518493508692507faf40333be7583051bc0470d0b829c7717be60e0b467a5f5fd722c30e1a8b00c69150600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156107b75750825b905060008267ffffffffffffffff1660011480156107d45750303b155b9050811580156107e2575080155b156108005760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561082a57845460ff60401b1916600160401b1785555b61083261116d565b61083a61116d565b610842611175565b61084b86611007565b831561089157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6108a1611465565b60008381526001602090815260408083208584526004019091529081902081518083019092528054829082906108d690611ad4565b80601f016020809104026020016040519081016040528092919081815260200182805461090290611ad4565b801561094f5780601f106109245761010080835404028352916020019161094f565b820191906000526020600020905b81548152906001019060200180831161093257829003601f168201915b50505050508152602001600182016040518060a0016040529081600082015481526020016001820154815260200160028201805461098c90611ad4565b80601f01602080910402602001604051908101604052809291908181526020018280546109b890611ad4565b8015610a055780601f106109da57610100808354040283529160200191610a05565b820191906000526020600020905b8154815290600101906020018083116109e857829003601f168201915b50505050508152602001600382018054610a1e90611ad4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4a90611ad4565b8015610a975780601f10610a6c57610100808354040283529160200191610a97565b820191906000526020600020905b815481529060010190602001808311610a7a57829003601f168201915b50505050508152602001600482018054610ab090611ad4565b80601f0160208091040260200160405190810160405280929190818152602001828054610adc90611ad4565b8015610b295780601f10610afe57610100808354040283529160200191610b29565b820191906000526020600020905b815481529060010190602001808311610b0c57829003601f168201915b505050919092525050509052509392505050565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610570565b6000610b7061113c565b610b7a8233611088565b90505b919050565b610b8a610dbd565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255610bce61054b565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b610c3b60405180608001604052806000815260200160006001600160a01b0316815260200160608152602001600081525090565b600082815260016020818152604092839020835160808101855286815281546001600160a01b03169281019290925291820180549293919291830191610c8090611ad4565b80601f0160208091040260200160405190810160405280929190818152602001828054610cac90611ad4565b8015610cf95780601f10610cce57610100808354040283529160200191610cf9565b820191906000526020600020905b815481529060010190602001808311610cdc57829003601f168201915b505050505081526020018260020154815250915050919050565b610d1b61113c565b6000838152600160205260409020546001600160a01b03163314610d525760405163abea322960e01b815260040160405180910390fd5b60008381526001602090815260408083206001600160a01b03861684526005019091529020610d818282611b6c565b506040516001600160a01b0383169084907f6e0403ef2b13328247bf9260ad8dd9c18fb5a18b95ea25de817ca991da05929b90600090a3505050565b33610dc661054b565b6001600160a01b0316146103e45760405163118cdaa760e01b8152336004820152602401610526565b610df7611185565b600080516020611ca9833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610ed657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610eca600080516020611c89833981519152546001600160a01b031690565b6001600160a01b031614155b156103e45760405163703e46dd60e11b815260040160405180910390fd5b610538610dbd565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f56575060408051601f3d908101601f19168201909252610f5391810190611c53565b60015b610f7e57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610526565b600080516020611c898339815191528114610faf57604051632a87526960e21b815260048101829052602401610526565b610fb983836111b5565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103e45760405163703e46dd60e11b815260040160405180910390fd5b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b03191681556104018261120b565b61104761113c565b600080516020611ca9833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610e31565b600080600080815461109990611c2c565b9182905550600081815260016020819052604090912080546001600160a01b0319166001600160a01b038716178155919250016110d68582611b6c565b506000818152600160205260409081902043600290910155516001600160a01b0384169082907f2980b13036c0d9df6b71ea9e9c09536efd24d7dd1868e29aa730f0c3fbd1a0dc90611129908890611692565b60405180910390a3505060005492915050565b600080516020611ca98339815191525460ff16156103e45760405163d93c066560e01b815260040160405180910390fd5b6103e461127c565b61117d61127c565b6103e46112c5565b600080516020611ca98339815191525460ff166103e457604051638dfc202b60e01b815260040160405180910390fd5b6111be826112e6565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561120357610fb9828261134b565b6104016113c1565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166103e457604051631afcd79f60e31b815260040160405180910390fd5b6112cd61127c565b600080516020611ca9833981519152805460ff19169055565b806001600160a01b03163b60000361131c57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610526565b600080516020611c8983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516113689190611c6c565b600060405180830381855af49150503d80600081146113a3576040519150601f19603f3d011682016040523d82523d6000602084013e6113a8565b606091505b50915091506113b88583836113e0565b95945050505050565b34156103e45760405163b398979f60e01b815260040160405180910390fd5b6060826113f5576113f08261143c565b61067c565b815115801561140c57506001600160a01b0384163b155b1561143557604051639996b31560e01b81526001600160a01b0385166004820152602401610526565b508061067c565b80511561144c5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518060400160405280606081526020016114a96040518060a0016040528060008152602001600081526020016060815260200160608152602001606081525090565b905290565b80356001600160a01b0381168114610b7d57600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156114fe576114fe6114c5565b60405290565b60405160a0810167ffffffffffffffff811182821017156114fe576114fe6114c5565b604051601f8201601f1916810167ffffffffffffffff81118282101715611550576115506114c5565b604052919050565b600082601f83011261156957600080fd5b813567ffffffffffffffff811115611583576115836114c5565b611596601f8201601f1916602001611527565b8181528460208386010111156115ab57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156115db57600080fd5b6115e4836114ae565b9150602083013567ffffffffffffffff81111561160057600080fd5b61160c85828601611558565b9150509250929050565b6000806040838503121561162957600080fd5b82359150611639602084016114ae565b90509250929050565b60005b8381101561165d578181015183820152602001611645565b50506000910152565b6000815180845261167e816020860160208601611642565b601f01601f19169290920160200192915050565b60208152600061067c6020830184611666565b6000806000606084860312156116ba57600080fd5b833567ffffffffffffffff808211156116d257600080fd5b6116de87838801611558565b9450602091506116ef8287016114ae565b935060408601358181111561170357600080fd5b8601601f8101881361171457600080fd5b803582811115611726576117266114c5565b8060051b611735858201611527565b918252828101850191858101908b84111561174f57600080fd5b86850192505b838310156117cf5782358681111561176d5760008081fd5b85016040818e03601f190112156117845760008081fd5b61178c6114db565b6117978983016114ae565b81526040820135888111156117ac5760008081fd5b6117ba8f8b83860101611558565b828b0152508352509186019190860190611755565b809750505050505050509250925092565b600080604083850312156117f357600080fd5b82359150602083013567ffffffffffffffff8082111561181257600080fd5b908401906040828703121561182657600080fd5b61182e6114db565b82358281111561183d57600080fd5b61184988828601611558565b82525060208301358281111561185e57600080fd5b929092019160a0838803121561187357600080fd5b61187b611504565b833581526020840135602082015260408401358381111561189b57600080fd5b6118a789828701611558565b6040830152506060840135838111156118bf57600080fd5b6118cb89828701611558565b6060830152506080840135838111156118e357600080fd5b6118ef89828701611558565b60808301525060208201529396939550929350505050565b60006020828403121561191957600080fd5b61067c826114ae565b6000806040838503121561193557600080fd5b50508035926020909101359150565b6020815260008251604060208401526119606060840182611666565b90506020840151601f198483030160408501528051825260208101516020830152604081015160a0604084015261199a60a0840182611666565b9050606082015183820360608501526119b38282611666565b9150506080820151915082810360808401526119cf8183611666565b9695505050505050565b6000602082840312156119eb57600080fd5b813567ffffffffffffffff811115611a0257600080fd5b611a0e84828501611558565b949350505050565b600060208284031215611a2857600080fd5b5035919050565b602081528151602082015260018060a01b0360208301511660408201526000604083015160806060840152611a6760a0840182611666565b9050606084015160808401528091505092915050565b600080600060608486031215611a9257600080fd5b83359250611aa2602085016114ae565b9150604084013567ffffffffffffffff811115611abe57600080fd5b611aca86828701611558565b9150509250925092565b600181811c90821680611ae857607f821691505b602082108103611b0857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b601f821115610fb9576000816000526020600020601f850160051c81016020861015611b4d5750805b601f850160051c820191505b8181101561089157828155600101611b59565b815167ffffffffffffffff811115611b8657611b866114c5565b611b9a81611b948454611ad4565b84611b24565b602080601f831160018114611bcf5760008415611bb75750858301515b600019600386901b1c1916600185901b178555610891565b600085815260208120601f198616915b82811015611bfe57888601518255948401946001909101908401611bdf565b5085821015611c1c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060018201611c4c57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215611c6557600080fd5b5051919050565b60008251611c7e818460208701611642565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a264697066735822122042a6f77c9b61c1619b3abbd6b31d2e3cc4f9f6a5bcee92a77362e9a2776e02e364736f6c63430008180033";

type DataRegistryImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataRegistryImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataRegistryImplementation__factory extends ContractFactory {
  constructor(...args: DataRegistryImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DataRegistryImplementation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DataRegistryImplementation__factory {
    return super.connect(runner) as DataRegistryImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataRegistryImplementationInterface {
    return new Interface(_abi) as DataRegistryImplementationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DataRegistryImplementation {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DataRegistryImplementation;
  }
}
