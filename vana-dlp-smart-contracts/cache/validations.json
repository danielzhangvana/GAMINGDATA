{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Ownable2StepStorage)14_storage": {
              "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
              "members": [
                {
                  "label": "_pendingOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)55_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable2Step": [
              {
                "contract": "Ownable2StepUpgradeable",
                "label": "_pendingOwner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)55_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:MulticallUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:22",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)252_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)313_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step": {
        "src": "@openzeppelin/contracts/access/Ownable2Step.sol:19",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "@openzeppelin/contracts/access/Ownable2Step.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/governance/utils/IVotes.sol:IVotes": {
        "src": "@openzeppelin/contracts/governance/utils/IVotes.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/governance/utils/Votes.sol:Votes": {
        "src": "@openzeppelin/contracts/governance/utils/Votes.sol:32",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5805.sol:IERC5805",
          "@openzeppelin/contracts/governance/utils/IVotes.sol:IVotes",
          "@openzeppelin/contracts/interfaces/IERC6372.sol:IERC6372",
          "@openzeppelin/contracts/utils/Nonces.sol:Nonces",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/Checkpoints.sol:Checkpoints",
          "@openzeppelin/contracts/utils/types/Time.sol:Time",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [
          "clock()",
          "CLOCK_MODE()",
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:51"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Nonces",
              "src": "@openzeppelin/contracts/utils/Nonces.sol:14"
            },
            {
              "label": "_delegatee",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Votes",
              "src": "@openzeppelin/contracts/governance/utils/Votes.sol:38"
            },
            {
              "label": "_delegateCheckpoints",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Trace208)8931_storage)",
              "contract": "Votes",
              "src": "@openzeppelin/contracts/governance/utils/Votes.sol:40"
            },
            {
              "label": "_totalCheckpoints",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Trace208)8931_storage",
              "contract": "Votes",
              "src": "@openzeppelin/contracts/governance/utils/Votes.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint208)8936_storage)dyn_storage": {
              "label": "struct Checkpoints.Checkpoint208[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Trace208)8931_storage)": {
              "label": "mapping(address => struct Checkpoints.Trace208)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint208)8936_storage": {
              "label": "struct Checkpoints.Checkpoint208",
              "members": [
                {
                  "label": "_key",
                  "type": "t_uint48",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_uint208",
                  "offset": 6,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Trace208)8931_storage": {
              "label": "struct Checkpoints.Trace208",
              "members": [
                {
                  "label": "_checkpoints",
                  "type": "t_array(t_struct(Checkpoint208)8936_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint208": {
              "label": "uint208",
              "numberOfBytes": "26"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267": {
        "src": "@openzeppelin/contracts/interfaces/IERC5267.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/IERC5805.sol:IERC5805": {
        "src": "@openzeppelin/contracts/interfaces/IERC5805.sol:9",
        "inherit": [
          "@openzeppelin/contracts/governance/utils/IVotes.sol:IVotes",
          "@openzeppelin/contracts/interfaces/IERC6372.sol:IERC6372"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/IERC6372.sol:IERC6372": {
        "src": "@openzeppelin/contracts/interfaces/IERC6372.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "clock()",
          "CLOCK_MODE()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "57a0c80a5824aeb22521720be86cb50976e113a607b640aa603df824e1acaca9",
          "withoutMetadata": "807e442d143dd063ff80a5831f1bc71402f8fc16f009e53b367b5408458a7846",
          "linkedWithoutMetadata": "807e442d143dd063ff80a5831f1bc71402f8fc16f009e53b367b5408458a7846"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:26"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "182d44fd0521b39e8687591a17cc2c3d98088c02314a11257eaf169029060de1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Nonces.sol:Nonces",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:51"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Nonces",
              "src": "@openzeppelin/contracts/utils/Nonces.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:23",
        "inherit": [
          "@openzeppelin/contracts/governance/utils/Votes.sol:Votes",
          "@openzeppelin/contracts/interfaces/IERC5805.sol:IERC5805",
          "@openzeppelin/contracts/governance/utils/IVotes.sol:IVotes",
          "@openzeppelin/contracts/interfaces/IERC6372.sol:IERC6372",
          "@openzeppelin/contracts/utils/Nonces.sol:Nonces",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "numCheckpoints(address)",
          "checkpoints(address,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:51"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Nonces",
              "src": "@openzeppelin/contracts/utils/Nonces.sol:14"
            },
            {
              "label": "_delegatee",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Votes",
              "src": "@openzeppelin/contracts/governance/utils/Votes.sol:38"
            },
            {
              "label": "_delegateCheckpoints",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(Trace208)8931_storage)",
              "contract": "Votes",
              "src": "@openzeppelin/contracts/governance/utils/Votes.sol:40"
            },
            {
              "label": "_totalCheckpoints",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(Trace208)8931_storage",
              "contract": "Votes",
              "src": "@openzeppelin/contracts/governance/utils/Votes.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint208)8936_storage)dyn_storage": {
              "label": "struct Checkpoints.Checkpoint208[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Trace208)8931_storage)": {
              "label": "mapping(address => struct Checkpoints.Trace208)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint208)8936_storage": {
              "label": "struct Checkpoints.Checkpoint208",
              "members": [
                {
                  "label": "_key",
                  "type": "t_uint48",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_uint208",
                  "offset": 6,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Trace208)8931_storage": {
              "label": "struct Checkpoints.Trace208",
              "members": [
                {
                  "label": "_checkpoints",
                  "type": "t_array(t_struct(Checkpoint208)8936_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint208": {
              "label": "uint208",
              "numberOfBytes": "26"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "588bdb00d407bf75be744388fb21ed011e2afe92f270d2f9077a7058d1a9c98b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "2025258c0f0529ea62e066bc81de2bf1b0117dfd2d27f881e0391d2f3af4f3ab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Nonces.sol:Nonces": {
        "src": "@openzeppelin/contracts/utils/Nonces.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "nonces(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Nonces",
              "src": "@openzeppelin/contracts/utils/Nonces.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings": {
        "src": "@openzeppelin/contracts/utils/ShortStrings.sol:40",
        "version": {
          "withMetadata": "b30f210de9fe82e537c6d079424935db43db22e6927d336872df2b074e2923db",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "4ede09429c2a2b16b7f97d42f7dd6c0da83f07986da7873ace42f8246afb88ed",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "c42936e10976fdc18078468f6419da1082bd8b068eb6ecd30ea825ead506dd1f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:12",
        "version": {
          "withMetadata": "c61a72dedeab43d3dd3f2045a4be814c4254aeb7a5605b5f7c780cebcad7b8af",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712": {
        "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/ShortStrings.sol:ShortStrings",
          "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:51"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils": {
        "src": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:15",
        "version": {
          "withMetadata": "23a1f937f7ab79e700b0749763fca60361b60b884954fadd1bbd621f7af3554d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "52535fd1658d985b285ec650d7792ee04085ee7f6cabcaeeeeaf407a45331e84",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin/contracts/utils/math/SafeCast.sol:19",
        "version": {
          "withMetadata": "966ed3dd3a4e7743bb35e9854f0e71c78d44b5d90adc0df897e261806d4178e7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "a47556b0b58f39f5e0cc61387cd1c0eebfde03c09f5331aff21de0af855b52e4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/structs/Checkpoints.sol:Checkpoints": {
        "src": "@openzeppelin/contracts/utils/structs/Checkpoints.sol:16",
        "version": {
          "withMetadata": "fd0495b57b5ee3c34a9d7054aa36c378755b32d762a58c398600c36be6221327",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "fb1e0e1e98078a75513cb52bb2ae84a7daf421093d02dbd73d26e84683c44d37",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/types/Time.sol:Time": {
        "src": "@openzeppelin/contracts/utils/types/Time.sol:20",
        "version": {
          "withMetadata": "1d9e3176781ca9880c78235d9093b311503455678dd9c90f6fb2345f77d40598",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/types/Time.sol:Time",
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dependencies/dataRegistry/DataRegistryImplementation.sol:DataRegistryImplementation": {
        "src": "contracts/dependencies/dataRegistry/DataRegistryImplementation.sol:11",
        "version": {
          "withMetadata": "8c4f37a39cfa9c58ae64689d5135d12f575cd33f0c313a3102ece7e07895323e",
          "withoutMetadata": "2d0981adc16ecc2e20863e33c667329dd729498a73a12bda1ac37befa13575b5",
          "linkedWithoutMetadata": "2d0981adc16ecc2e20863e33c667329dd729498a73a12bda1ac37befa13575b5"
        },
        "inherit": [
          "contracts/dependencies/dataRegistry/interfaces/DataRegistryStorageV1.sol:DataRegistryStorageV1",
          "contracts/dependencies/dataRegistry/interfaces/IDataRegistry.sol:IDataRegistry",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils"
        ],
        "methods": [
          "()",
          "initialize(address)",
          "version()",
          "pause()",
          "unpause()",
          "files(uint256)",
          "fileProofs(uint256,uint256)",
          "filePermissions(uint256,address)",
          "addFile(string)",
          "addFileWithPermissions(string,address,struct IDataRegistry.Permission[])",
          "addProof(uint256,(bytes,(uint256,uint256,string,string,string)))",
          "addFilePermission(uint256,address,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "filesCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "DataRegistryStorageV1",
              "src": "contracts/dependencies/dataRegistry/interfaces/DataRegistryStorageV1.sol:12"
            },
            {
              "label": "_files",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(File)11312_storage)",
              "contract": "DataRegistryStorageV1",
              "src": "contracts/dependencies/dataRegistry/interfaces/DataRegistryStorageV1.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Ownable2StepStorage)14_storage": {
              "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
              "members": [
                {
                  "label": "_pendingOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)55_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)252_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(File)11312_storage)": {
              "label": "mapping(uint256 => struct IDataRegistry.File)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proof)11294_storage)": {
              "label": "mapping(uint256 => struct IDataRegistry.Proof)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(File)11312_storage": {
              "label": "struct IDataRegistry.File",
              "members": [
                {
                  "label": "ownerAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "addedAtBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proofsCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "proofs",
                  "type": "t_mapping(t_uint256,t_struct(Proof)11294_storage)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "permissions",
                  "type": "t_mapping(t_address,t_string_storage)",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proof)11294_storage": {
              "label": "struct IDataRegistry.Proof",
              "members": [
                {
                  "label": "signature",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "data",
                  "type": "t_struct(ProofData)11288_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ProofData)11288_storage": {
              "label": "struct IDataRegistry.ProofData",
              "members": [
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dlpId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "metadata",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proofUrl",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "instruction",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable2Step": [
              {
                "contract": "Ownable2StepUpgradeable",
                "label": "_pendingOwner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dependencies/dataRegistry/DataRegistryProxy.sol:DataRegistryProxy": {
        "src": "contracts/dependencies/dataRegistry/DataRegistryProxy.sol:6",
        "version": {
          "withMetadata": "55e887376d0ec57d8ed721af0322760289b4ab00ffcb9f71e1f5e291d820df1b",
          "withoutMetadata": "65d490ab905fe6cedb04fdbceac75af9ccc2458db9fda0db4b1df01b25c0b8e1",
          "linkedWithoutMetadata": "65d490ab905fe6cedb04fdbceac75af9ccc2458db9fda0db4b1df01b25c0b8e1"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DataRegistryProxy",
            "src": "contracts/dependencies/dataRegistry/DataRegistryProxy.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dependencies/dataRegistry/interfaces/DataRegistryStorageV1.sol:DataRegistryStorageV1": {
        "src": "contracts/dependencies/dataRegistry/interfaces/DataRegistryStorageV1.sol:11",
        "inherit": [
          "contracts/dependencies/dataRegistry/interfaces/IDataRegistry.sol:IDataRegistry"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "filesCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "DataRegistryStorageV1",
              "src": "contracts/dependencies/dataRegistry/interfaces/DataRegistryStorageV1.sol:12"
            },
            {
              "label": "_files",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(File)11312_storage)",
              "contract": "DataRegistryStorageV1",
              "src": "contracts/dependencies/dataRegistry/interfaces/DataRegistryStorageV1.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(File)11312_storage)": {
              "label": "mapping(uint256 => struct IDataRegistry.File)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Proof)11294_storage)": {
              "label": "mapping(uint256 => struct IDataRegistry.Proof)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(File)11312_storage": {
              "label": "struct IDataRegistry.File",
              "members": [
                {
                  "label": "ownerAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "addedAtBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proofsCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "proofs",
                  "type": "t_mapping(t_uint256,t_struct(Proof)11294_storage)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "permissions",
                  "type": "t_mapping(t_address,t_string_storage)",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Proof)11294_storage": {
              "label": "struct IDataRegistry.Proof",
              "members": [
                {
                  "label": "signature",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "data",
                  "type": "t_struct(ProofData)11288_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ProofData)11288_storage": {
              "label": "struct IDataRegistry.ProofData",
              "members": [
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dlpId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "metadata",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proofUrl",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "instruction",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dependencies/dataRegistry/interfaces/IDataRegistry.sol:IDataRegistry": {
        "src": "contracts/dependencies/dataRegistry/interfaces/IDataRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "version()",
          "filesCount()",
          "files(uint256)",
          "fileProofs(uint256,uint256)",
          "filePermissions(uint256,address)",
          "pause()",
          "unpause()",
          "addFile(string)",
          "addFileWithPermissions(string,address,struct IDataRegistry.Permission[])",
          "addProof(uint256,(bytes,(uint256,uint256,string,string,string)))",
          "addFilePermission(uint256,address,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dependencies/root/DataLiquidityPoolsRootImplementation.sol:DataLiquidityPoolsRootImplementation": {
        "src": "contracts/dependencies/root/DataLiquidityPoolsRootImplementation.sol:13",
        "version": {
          "withMetadata": "7e7e557ac079a88719b267a8165ac7d4cb36f48b7367e0ea15d4230a69b25291",
          "withoutMetadata": "2de1aac59046a2be72f8cd46c8668fbf8c3fcc261a55abcb671a0986b0693b02",
          "linkedWithoutMetadata": "2de1aac59046a2be72f8cd46c8668fbf8c3fcc261a55abcb671a0986b0693b02"
        },
        "inherit": [
          "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:DataLiquidityPoolsRootStorageV1",
          "contracts/dependencies/root/interfaces/IDataLiquidityPoolsRoot.sol:IDataLiquidityPoolsRoot",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/utils/structs/Checkpoints.sol:Checkpoints",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "()",
          "initialize((address payable,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
          "version()",
          "dlps(uint256)",
          "dlpsByAddress(address)",
          "registeredDlps()",
          "epochs(uint256)",
          "dlpEpochs(uint256,uint256)",
          "stakerDlpsListCount(address)",
          "stakerDlps(address,uint256)",
          "stakerDlpsList(address)",
          "stakerDlpEpochs(address,uint256,uint256)",
          "unstakebleAmount(address,uint256)",
          "claimableAmount(address,uint256)",
          "estimatedDlpReward(uint256)",
          "topDlpIds(uint256)",
          "pause()",
          "unpause()",
          "updateMaxNumberOfRegisteredDlps(uint256)",
          "updateNumberOfTopDlps(uint256)",
          "updateEpochSize(uint256)",
          "updateEpochRewardAmount(uint256)",
          "updateMinDlpStakeAmount(uint256)",
          "updatePerformancePercentages(uint256,uint256,uint256,uint256)",
          "registerDlp(address,address payable,uint256)",
          "registerDlpWithGrant(address,address payable,uint256)",
          "updateDlpStakersPercentage(uint256,uint256)",
          "deregisterDlp(uint256)",
          "distributeStakeAfterDeregistration(uint256,uint256)",
          "createEpochs()",
          "createEpochsUntilBlockNumber(uint256)",
          "saveEpochPerformances(uint256,struct IDataLiquidityPoolsRoot.DlpPerformance[],bool)",
          "addRewardForDlps()",
          "claimRewardUntilEpoch(uint256,uint256)",
          "claimReward(uint256)",
          "stake(uint256)",
          "unstake(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxNumberOfRegisteredDlps",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:12"
            },
            {
              "label": "numberOfTopDlps",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:13"
            },
            {
              "label": "minDlpStakeAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:14"
            },
            {
              "label": "totalDlpsRewardAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:15"
            },
            {
              "label": "epochRewardAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:16"
            },
            {
              "label": "epochSize",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:17"
            },
            {
              "label": "ttfPercentage",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:19"
            },
            {
              "label": "tfcPercentage",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:20"
            },
            {
              "label": "vduPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:21"
            },
            {
              "label": "uwPercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:22"
            },
            {
              "label": "dlpsCount",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:24"
            },
            {
              "label": "_dlps",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_struct(Dlp)14431_storage)",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:25"
            },
            {
              "label": "dlpIds",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:26"
            },
            {
              "label": "_registeredDlps",
              "offset": 0,
              "slot": "13",
              "type": "t_struct(UintSet)10452_storage",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:28"
            },
            {
              "label": "epochsCount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:30"
            },
            {
              "label": "_epochs",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(Epoch)14391_storage)",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:31"
            },
            {
              "label": "_stakers",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_struct(Staker)14435_storage)",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Ownable2StepStorage)14_storage": {
              "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
              "members": [
                {
                  "label": "_pendingOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)55_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)252_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)313_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Checkpoint208)8936_storage)dyn_storage": {
              "label": "struct Checkpoints.Checkpoint208[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(DlpStatus)14359": {
              "label": "enum IDataLiquidityPoolsRoot.DlpStatus",
              "members": [
                "None",
                "Registered",
                "Deregistered"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DlpStaker)14404_storage)": {
              "label": "mapping(address => struct IDataLiquidityPoolsRoot.DlpStaker)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Staker)14435_storage)": {
              "label": "mapping(address => struct IDataLiquidityPoolsRoot.Staker)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Dlp)14431_storage)": {
              "label": "mapping(uint256 => struct IDataLiquidityPoolsRoot.Dlp)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Epoch)14391_storage)": {
              "label": "mapping(uint256 => struct IDataLiquidityPoolsRoot.Epoch)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(EpochDlp)14374_storage)": {
              "label": "mapping(uint256 => struct IDataLiquidityPoolsRoot.EpochDlp)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint208)8936_storage": {
              "label": "struct Checkpoints.Checkpoint208",
              "members": [
                {
                  "label": "_key",
                  "type": "t_uint48",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_uint208",
                  "offset": 6,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Dlp)14431_storage": {
              "label": "struct IDataLiquidityPoolsRoot.Dlp",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dlpAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "status",
                  "type": "t_enum(DlpStatus)14359",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "registrationBlockNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "stakersPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "grantedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "stakeAmountCheckpoints",
                  "type": "t_struct(Trace208)8931_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakers",
                  "type": "t_mapping(t_address,t_struct(DlpStaker)14404_storage)",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "unstakeAmountCheckpoints",
                  "type": "t_struct(Trace208)8931_storage",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(DlpStaker)14404_storage": {
              "label": "struct IDataLiquidityPoolsRoot.DlpStaker",
              "members": [
                {
                  "label": "lastClaimedEpochId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeAmountCheckpoints",
                  "type": "t_struct(Trace208)8931_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "claimAmounts",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeAmountCheckpoints",
                  "type": "t_struct(Trace208)8931_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Epoch)14391_storage": {
              "label": "struct IDataLiquidityPoolsRoot.Epoch",
              "members": [
                {
                  "label": "startBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "dlpIds",
                  "type": "t_struct(UintSet)10452_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isFinalised",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "dlps",
                  "type": "t_mapping(t_uint256,t_struct(EpochDlp)14374_storage)",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(EpochDlp)14374_storage": {
              "label": "struct IDataLiquidityPoolsRoot.EpochDlp",
              "members": [
                {
                  "label": "ttf",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tfc",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "vdu",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "uw",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "stakeAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "stakersPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Set)9980_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Staker)14435_storage": {
              "label": "struct IDataLiquidityPoolsRoot.Staker",
              "members": [
                {
                  "label": "dlpIds",
                  "type": "t_struct(UintSet)10452_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trace208)8931_storage": {
              "label": "struct Checkpoints.Trace208",
              "members": [
                {
                  "label": "_checkpoints",
                  "type": "t_array(t_struct(Checkpoint208)8936_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(UintSet)10452_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9980_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint208": {
              "label": "uint208",
              "numberOfBytes": "26"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable2Step": [
              {
                "contract": "Ownable2StepUpgradeable",
                "label": "_pendingOwner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dependencies/root/DataLiquidityPoolsRootProxy.sol:DataLiquidityPoolsRootProxy": {
        "src": "contracts/dependencies/root/DataLiquidityPoolsRootProxy.sol:6",
        "version": {
          "withMetadata": "a311be6446e40053378ede728c555cd8f161ddbe7541a378188415d66242d88b",
          "withoutMetadata": "65d490ab905fe6cedb04fdbceac75af9ccc2458db9fda0db4b1df01b25c0b8e1",
          "linkedWithoutMetadata": "65d490ab905fe6cedb04fdbceac75af9ccc2458db9fda0db4b1df01b25c0b8e1"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DataLiquidityPoolsRootProxy",
            "src": "contracts/dependencies/root/DataLiquidityPoolsRootProxy.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:DataLiquidityPoolsRootStorageV1": {
        "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:11",
        "inherit": [
          "contracts/dependencies/root/interfaces/IDataLiquidityPoolsRoot.sol:IDataLiquidityPoolsRoot"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxNumberOfRegisteredDlps",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:12"
            },
            {
              "label": "numberOfTopDlps",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:13"
            },
            {
              "label": "minDlpStakeAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:14"
            },
            {
              "label": "totalDlpsRewardAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:15"
            },
            {
              "label": "epochRewardAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:16"
            },
            {
              "label": "epochSize",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:17"
            },
            {
              "label": "ttfPercentage",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:19"
            },
            {
              "label": "tfcPercentage",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:20"
            },
            {
              "label": "vduPercentage",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:21"
            },
            {
              "label": "uwPercentage",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:22"
            },
            {
              "label": "dlpsCount",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:24"
            },
            {
              "label": "_dlps",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_struct(Dlp)14431_storage)",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:25"
            },
            {
              "label": "dlpIds",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:26"
            },
            {
              "label": "_registeredDlps",
              "offset": 0,
              "slot": "13",
              "type": "t_struct(UintSet)10452_storage",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:28"
            },
            {
              "label": "epochsCount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:30"
            },
            {
              "label": "_epochs",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(Epoch)14391_storage)",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:31"
            },
            {
              "label": "_stakers",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_struct(Staker)14435_storage)",
              "contract": "DataLiquidityPoolsRootStorageV1",
              "src": "contracts/dependencies/root/interfaces/DataLiquidityPoolsRootStorageV1.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Checkpoint208)8936_storage)dyn_storage": {
              "label": "struct Checkpoints.Checkpoint208[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(DlpStatus)14359": {
              "label": "enum IDataLiquidityPoolsRoot.DlpStatus",
              "members": [
                "None",
                "Registered",
                "Deregistered"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(DlpStaker)14404_storage)": {
              "label": "mapping(address => struct IDataLiquidityPoolsRoot.DlpStaker)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Staker)14435_storage)": {
              "label": "mapping(address => struct IDataLiquidityPoolsRoot.Staker)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Dlp)14431_storage)": {
              "label": "mapping(uint256 => struct IDataLiquidityPoolsRoot.Dlp)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Epoch)14391_storage)": {
              "label": "mapping(uint256 => struct IDataLiquidityPoolsRoot.Epoch)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(EpochDlp)14374_storage)": {
              "label": "mapping(uint256 => struct IDataLiquidityPoolsRoot.EpochDlp)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint208)8936_storage": {
              "label": "struct Checkpoints.Checkpoint208",
              "members": [
                {
                  "label": "_key",
                  "type": "t_uint48",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_uint208",
                  "offset": 6,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Dlp)14431_storage": {
              "label": "struct IDataLiquidityPoolsRoot.Dlp",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "dlpAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "status",
                  "type": "t_enum(DlpStatus)14359",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "registrationBlockNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "stakersPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "grantedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "stakeAmountCheckpoints",
                  "type": "t_struct(Trace208)8931_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakers",
                  "type": "t_mapping(t_address,t_struct(DlpStaker)14404_storage)",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "unstakeAmountCheckpoints",
                  "type": "t_struct(Trace208)8931_storage",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(DlpStaker)14404_storage": {
              "label": "struct IDataLiquidityPoolsRoot.DlpStaker",
              "members": [
                {
                  "label": "lastClaimedEpochId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeAmountCheckpoints",
                  "type": "t_struct(Trace208)8931_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "claimAmounts",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakeAmountCheckpoints",
                  "type": "t_struct(Trace208)8931_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Epoch)14391_storage": {
              "label": "struct IDataLiquidityPoolsRoot.Epoch",
              "members": [
                {
                  "label": "startBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "dlpIds",
                  "type": "t_struct(UintSet)10452_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isFinalised",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "dlps",
                  "type": "t_mapping(t_uint256,t_struct(EpochDlp)14374_storage)",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(EpochDlp)14374_storage": {
              "label": "struct IDataLiquidityPoolsRoot.EpochDlp",
              "members": [
                {
                  "label": "ttf",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tfc",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "vdu",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "uw",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "stakeAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "stakersPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Set)9980_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Staker)14435_storage": {
              "label": "struct IDataLiquidityPoolsRoot.Staker",
              "members": [
                {
                  "label": "dlpIds",
                  "type": "t_struct(UintSet)10452_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trace208)8931_storage": {
              "label": "struct Checkpoints.Trace208",
              "members": [
                {
                  "label": "_checkpoints",
                  "type": "t_array(t_struct(Checkpoint208)8936_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(UintSet)10452_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9980_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint208": {
              "label": "uint208",
              "numberOfBytes": "26"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dependencies/root/interfaces/IDataLiquidityPoolsRoot.sol:IDataLiquidityPoolsRoot": {
        "src": "contracts/dependencies/root/interfaces/IDataLiquidityPoolsRoot.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "version()",
          "numberOfTopDlps()",
          "maxNumberOfRegisteredDlps()",
          "epochSize()",
          "registeredDlps()",
          "epochsCount()",
          "epochs(uint256)",
          "minDlpStakeAmount()",
          "totalDlpsRewardAmount()",
          "epochRewardAmount()",
          "ttfPercentage()",
          "tfcPercentage()",
          "vduPercentage()",
          "uwPercentage()",
          "dlpsCount()",
          "dlps(uint256)",
          "dlpsByAddress(address)",
          "dlpIds(address)",
          "dlpEpochs(uint256,uint256)",
          "stakerDlpsListCount(address)",
          "stakerDlpsList(address)",
          "stakerDlps(address,uint256)",
          "stakerDlpEpochs(address,uint256,uint256)",
          "topDlpIds(uint256)",
          "unstakebleAmount(address,uint256)",
          "claimableAmount(address,uint256)",
          "pause()",
          "unpause()",
          "updateNumberOfTopDlps(uint256)",
          "updateMaxNumberOfRegisteredDlps(uint256)",
          "updateEpochSize(uint256)",
          "updateEpochRewardAmount(uint256)",
          "updateMinDlpStakeAmount(uint256)",
          "updatePerformancePercentages(uint256,uint256,uint256,uint256)",
          "createEpochs()",
          "createEpochsUntilBlockNumber(uint256)",
          "registerDlp(address,address payable,uint256)",
          "registerDlpWithGrant(address,address payable,uint256)",
          "updateDlpStakersPercentage(uint256,uint256)",
          "deregisterDlp(uint256)",
          "distributeStakeAfterDeregistration(uint256,uint256)",
          "addRewardForDlps()",
          "claimRewardUntilEpoch(uint256,uint256)",
          "claimReward(uint256)",
          "stake(uint256)",
          "unstake(uint256,uint256)",
          "saveEpochPerformances(uint256,struct IDataLiquidityPoolsRoot.DlpPerformance[],bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dependencies/teePool/TeePoolImplementation.sol:TeePoolImplementation": {
        "src": "contracts/dependencies/teePool/TeePoolImplementation.sol:11",
        "version": {
          "withMetadata": "a136ead9d36c9cb360a909ddbe56e27dfd4c268b045736a85f09724b47141a0f",
          "withoutMetadata": "7a569ba88c25f9cfdd804de8b0855cabaae6d5cc8d597811765ea0c955c5f923",
          "linkedWithoutMetadata": "7a569ba88c25f9cfdd804de8b0855cabaae6d5cc8d597811765ea0c955c5f923"
        },
        "inherit": [
          "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:TeePoolStorageV1",
          "contracts/dependencies/teePool/interfaces/ITeePool.sol:ITeePool",
          "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:MulticallUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "()",
          "initialize(address,address,uint256)",
          "version()",
          "jobs(uint256)",
          "tees(address)",
          "teeJobIdsPaginated(address,uint256,uint256)",
          "teesCount()",
          "teeList()",
          "teeListAt(uint256)",
          "activeTeesCount()",
          "activeTeeList()",
          "activeTeeListAt(uint256)",
          "isTee(address)",
          "fileJobIds(uint256)",
          "pause()",
          "unpause()",
          "updateDataRegistry(address)",
          "updateTeeFee(uint256)",
          "updateCancelDelay(uint256)",
          "addTee(address,string,string)",
          "removeTee(address)",
          "requestContributionProof(uint256)",
          "submitJob(uint256)",
          "cancelJob(uint256)",
          "addProof(uint256,(bytes,(uint256,uint256,string,string,string)))",
          "claim()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "dataRegistry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IDataRegistry)11407",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:12"
            },
            {
              "label": "jobsCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:14"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Job)15836_storage)",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:15"
            },
            {
              "label": "_teeList",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)10295_storage",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:17"
            },
            {
              "label": "_activeTeeList",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(AddressSet)10295_storage",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:18"
            },
            {
              "label": "_tees",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Tee)15851_storage)",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:19"
            },
            {
              "label": "teeFee",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:21"
            },
            {
              "label": "cancelDelay",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:22"
            },
            {
              "label": "_fileJobsIds",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(UintSet)10452_storage)",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Ownable2StepStorage)14_storage": {
              "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
              "members": [
                {
                  "label": "_pendingOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)55_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)252_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)313_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IDataRegistry)11407": {
              "label": "contract IDataRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(JobStatus)15822": {
              "label": "enum ITeePool.JobStatus",
              "members": [
                "None",
                "Submitted",
                "Completed",
                "Canceled"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(TeeStatus)15817": {
              "label": "enum ITeePool.TeeStatus",
              "members": [
                "None",
                "Active",
                "Removed"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Tee)15851_storage)": {
              "label": "mapping(address => struct ITeePool.Tee)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Job)15836_storage)": {
              "label": "mapping(uint256 => struct ITeePool.Job)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(UintSet)10452_storage)": {
              "label": "mapping(uint256 => struct EnumerableSet.UintSet)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10295_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9980_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Job)15836_storage": {
              "label": "struct ITeePool.Job",
              "members": [
                {
                  "label": "fileId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bidAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(JobStatus)15822",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "addedTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "teeAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Set)9980_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Tee)15851_storage": {
              "label": "struct ITeePool.Tee",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(TeeStatus)15817",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "withdrawnAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "jobIdsList",
                  "type": "t_struct(UintSet)10452_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "publicKey",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(UintSet)10452_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9980_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable2Step": [
              {
                "contract": "Ownable2StepUpgradeable",
                "label": "_pendingOwner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dependencies/teePool/TeePoolProxy.sol:TeePoolProxy": {
        "src": "contracts/dependencies/teePool/TeePoolProxy.sol:6",
        "version": {
          "withMetadata": "f66a8367aa6d6f6e05f5761efc77eee8b02a4cc7c27b26fde5d96fb76ea1c05e",
          "withoutMetadata": "65d490ab905fe6cedb04fdbceac75af9ccc2458db9fda0db4b1df01b25c0b8e1",
          "linkedWithoutMetadata": "65d490ab905fe6cedb04fdbceac75af9ccc2458db9fda0db4b1df01b25c0b8e1"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TeePoolProxy",
            "src": "contracts/dependencies/teePool/TeePoolProxy.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dependencies/teePool/interfaces/ITeePool.sol:ITeePool": {
        "src": "contracts/dependencies/teePool/interfaces/ITeePool.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "version()",
          "dataRegistry()",
          "cancelDelay()",
          "jobsCount()",
          "jobs(uint256)",
          "tees(address)",
          "teesCount()",
          "teeList()",
          "teeListAt(uint256)",
          "activeTeesCount()",
          "activeTeeList()",
          "activeTeeListAt(uint256)",
          "isTee(address)",
          "teeFee()",
          "teeJobIdsPaginated(address,uint256,uint256)",
          "fileJobIds(uint256)",
          "pause()",
          "unpause()",
          "updateDataRegistry(address)",
          "updateTeeFee(uint256)",
          "updateCancelDelay(uint256)",
          "addTee(address,string,string)",
          "removeTee(address)",
          "requestContributionProof(uint256)",
          "submitJob(uint256)",
          "cancelJob(uint256)",
          "addProof(uint256,(bytes,(uint256,uint256,string,string,string)))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:TeePoolStorageV1": {
        "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:11",
        "inherit": [
          "contracts/dependencies/teePool/interfaces/ITeePool.sol:ITeePool"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "dataRegistry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IDataRegistry)11407",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:12"
            },
            {
              "label": "jobsCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:14"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Job)15836_storage)",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:15"
            },
            {
              "label": "_teeList",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)10295_storage",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:17"
            },
            {
              "label": "_activeTeeList",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(AddressSet)10295_storage",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:18"
            },
            {
              "label": "_tees",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Tee)15851_storage)",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:19"
            },
            {
              "label": "teeFee",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:21"
            },
            {
              "label": "cancelDelay",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:22"
            },
            {
              "label": "_fileJobsIds",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(UintSet)10452_storage)",
              "contract": "TeePoolStorageV1",
              "src": "contracts/dependencies/teePool/interfaces/TeePoolStorageV1.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IDataRegistry)11407": {
              "label": "contract IDataRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(JobStatus)15822": {
              "label": "enum ITeePool.JobStatus",
              "members": [
                "None",
                "Submitted",
                "Completed",
                "Canceled"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(TeeStatus)15817": {
              "label": "enum ITeePool.TeeStatus",
              "members": [
                "None",
                "Active",
                "Removed"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Tee)15851_storage)": {
              "label": "mapping(address => struct ITeePool.Tee)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Job)15836_storage)": {
              "label": "mapping(uint256 => struct ITeePool.Job)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(UintSet)10452_storage)": {
              "label": "mapping(uint256 => struct EnumerableSet.UintSet)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10295_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9980_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Job)15836_storage": {
              "label": "struct ITeePool.Job",
              "members": [
                {
                  "label": "fileId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bidAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(JobStatus)15822",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "addedTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "teeAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Set)9980_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Tee)15851_storage": {
              "label": "struct ITeePool.Tee",
              "members": [
                {
                  "label": "status",
                  "type": "t_enum(TeeStatus)15817",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "withdrawnAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "jobIdsList",
                  "type": "t_struct(UintSet)10452_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "publicKey",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(UintSet)10452_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9980_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dlp/DataLiquidityPoolImplementation.sol:DataLiquidityPoolImplementation": {
        "src": "contracts/dlp/DataLiquidityPoolImplementation.sol:14",
        "version": {
          "withMetadata": "f53e4bea3a0d61959713fe2146277f8fc2e5705c6f9cc05409344563ae9ebba8",
          "withoutMetadata": "50a888957000a9faf35c981e62527d703ab72e895a7ea04db96fe2ece9e58536",
          "linkedWithoutMetadata": "50a888957000a9faf35c981e62527d703ab72e895a7ea04db96fe2ece9e58536"
        },
        "inherit": [
          "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:DataLiquidityPoolStorageV1",
          "contracts/dlp/interfaces/IDataLiquidityPool.sol:IDataLiquidityPool",
          "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:MulticallUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol:MessageHashUtils",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "initialize((address,address,address,address,string,string,string,uint256))",
          "version()",
          "files(uint256)",
          "filesListCount()",
          "filesListAt(uint256)",
          "contributors(uint256)",
          "contributorInfo(address)",
          "contributorFiles(address,uint256)",
          "pause()",
          "unpause()",
          "updateFileRewardFactor(uint256)",
          "updateTeePool(address)",
          "updateProofInstruction(string)",
          "updateMasterKey(string)",
          "requestReward(uint256,uint256)",
          "addRewardsForContributors(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:12"
            },
            {
              "label": "dataRegistry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IDataRegistry)11407",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)3263",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:14"
            },
            {
              "label": "masterKey",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:15"
            },
            {
              "label": "proofInstruction",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:16"
            },
            {
              "label": "totalContributorsRewardAmount",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:17"
            },
            {
              "label": "fileRewardFactor",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:18"
            },
            {
              "label": "_files",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(File)16798_storage)",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:20"
            },
            {
              "label": "_filesList",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(UintSet)10452_storage",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:21"
            },
            {
              "label": "contributorsCount",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:23"
            },
            {
              "label": "_contributors",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:24"
            },
            {
              "label": "_contributorInfo",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(Contributor)16802_storage)",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:25"
            },
            {
              "label": "teePool",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(ITeePool)16034",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Ownable2StepStorage)14_storage": {
              "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
              "members": [
                {
                  "label": "_pendingOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)55_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)252_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)313_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IDataRegistry)11407": {
              "label": "contract IDataRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)3263": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(ITeePool)16034": {
              "label": "contract ITeePool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Contributor)16802_storage)": {
              "label": "mapping(address => struct IDataLiquidityPool.Contributor)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(File)16798_storage)": {
              "label": "mapping(uint256 => struct IDataLiquidityPool.File)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Contributor)16802_storage": {
              "label": "struct IDataLiquidityPool.Contributor",
              "members": [
                {
                  "label": "filesList",
                  "type": "t_struct(UintSet)10452_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(File)16798_storage": {
              "label": "struct IDataLiquidityPool.File",
              "members": [
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proofIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)9980_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)10452_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9980_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable2Step": [
              {
                "contract": "Ownable2StepUpgradeable",
                "label": "_pendingOwner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dlp/DataLiquidityPoolProxy.sol:DataLiquidityPoolProxy": {
        "src": "contracts/dlp/DataLiquidityPoolProxy.sol:6",
        "version": {
          "withMetadata": "3f46234bccd8101f6c96814e9fa3b15b904588b2b71dae8426261d2fc6632aae",
          "withoutMetadata": "65d490ab905fe6cedb04fdbceac75af9ccc2458db9fda0db4b1df01b25c0b8e1",
          "linkedWithoutMetadata": "65d490ab905fe6cedb04fdbceac75af9ccc2458db9fda0db4b1df01b25c0b8e1"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DataLiquidityPoolProxy",
            "src": "contracts/dlp/DataLiquidityPoolProxy.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:DataLiquidityPoolStorageV1": {
        "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:11",
        "inherit": [
          "contracts/dlp/interfaces/IDataLiquidityPool.sol:IDataLiquidityPool"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:12"
            },
            {
              "label": "dataRegistry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IDataRegistry)11407",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)3263",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:14"
            },
            {
              "label": "masterKey",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:15"
            },
            {
              "label": "proofInstruction",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:16"
            },
            {
              "label": "totalContributorsRewardAmount",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:17"
            },
            {
              "label": "fileRewardFactor",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:18"
            },
            {
              "label": "_files",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(File)16798_storage)",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:20"
            },
            {
              "label": "_filesList",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(UintSet)10452_storage",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:21"
            },
            {
              "label": "contributorsCount",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:23"
            },
            {
              "label": "_contributors",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:24"
            },
            {
              "label": "_contributorInfo",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(Contributor)16802_storage)",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:25"
            },
            {
              "label": "teePool",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(ITeePool)16034",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IDataRegistry)11407": {
              "label": "contract IDataRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)3263": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(ITeePool)16034": {
              "label": "contract ITeePool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Contributor)16802_storage)": {
              "label": "mapping(address => struct IDataLiquidityPool.Contributor)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(File)16798_storage)": {
              "label": "mapping(uint256 => struct IDataLiquidityPool.File)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Contributor)16802_storage": {
              "label": "struct IDataLiquidityPool.Contributor",
              "members": [
                {
                  "label": "filesList",
                  "type": "t_struct(UintSet)10452_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(File)16798_storage": {
              "label": "struct IDataLiquidityPool.File",
              "members": [
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proofIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)9980_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)10452_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9980_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/dlp/interfaces/IDataLiquidityPool.sol:IDataLiquidityPool": {
        "src": "contracts/dlp/interfaces/IDataLiquidityPool.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "version()",
          "dataRegistry()",
          "teePool()",
          "token()",
          "masterKey()",
          "proofInstruction()",
          "totalContributorsRewardAmount()",
          "fileRewardFactor()",
          "filesListCount()",
          "filesListAt(uint256)",
          "files(uint256)",
          "contributorsCount()",
          "contributors(uint256)",
          "contributorInfo(address)",
          "contributorFiles(address,uint256)",
          "pause()",
          "unpause()",
          "updateFileRewardFactor(uint256)",
          "updateTeePool(address)",
          "updateProofInstruction(string)",
          "updateMasterKey(string)",
          "requestReward(uint256,uint256)",
          "addRewardsForContributors(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/mocks/dlp/DataLiquidityPoolImplementationV2Mock.sol:DataLiquidityPoolImplementationV2Mock": {
        "src": "contracts/mocks/dlp/DataLiquidityPoolImplementationV2Mock.sol:6",
        "version": {
          "withMetadata": "b3a3211799044b881f05a1019ed10344c0b7c87939fea879a7da72d8092637a9",
          "withoutMetadata": "fee41a082fbdc0c82bd288a1d17227cb40140efeae90ff82a0ace59cb18b5296",
          "linkedWithoutMetadata": "fee41a082fbdc0c82bd288a1d17227cb40140efeae90ff82a0ace59cb18b5296"
        },
        "inherit": [
          "contracts/dlp/DataLiquidityPoolImplementation.sol:DataLiquidityPoolImplementation",
          "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:DataLiquidityPoolStorageV1",
          "contracts/dlp/interfaces/IDataLiquidityPool.sol:IDataLiquidityPool",
          "@openzeppelin/contracts-upgradeable/utils/MulticallUpgradeable.sol:MulticallUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:Ownable2StepUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "version()",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:12"
            },
            {
              "label": "dataRegistry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IDataRegistry)11407",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)3263",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:14"
            },
            {
              "label": "masterKey",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:15"
            },
            {
              "label": "proofInstruction",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:16"
            },
            {
              "label": "totalContributorsRewardAmount",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:17"
            },
            {
              "label": "fileRewardFactor",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:18"
            },
            {
              "label": "_files",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(File)16798_storage)",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:20"
            },
            {
              "label": "_filesList",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(UintSet)10452_storage",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:21"
            },
            {
              "label": "contributorsCount",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:23"
            },
            {
              "label": "_contributors",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:24"
            },
            {
              "label": "_contributorInfo",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(Contributor)16802_storage)",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:25"
            },
            {
              "label": "teePool",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(ITeePool)16034",
              "contract": "DataLiquidityPoolStorageV1",
              "src": "contracts/dlp/interfaces/DataLiquidityPoolStorageV1.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Ownable2StepStorage)14_storage": {
              "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
              "members": [
                {
                  "label": "_pendingOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)55_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)252_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)313_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IDataRegistry)11407": {
              "label": "contract IDataRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)3263": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(ITeePool)16034": {
              "label": "contract ITeePool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Contributor)16802_storage)": {
              "label": "mapping(address => struct IDataLiquidityPool.Contributor)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(File)16798_storage)": {
              "label": "mapping(uint256 => struct IDataLiquidityPool.File)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Contributor)16802_storage": {
              "label": "struct IDataLiquidityPool.Contributor",
              "members": [
                {
                  "label": "filesList",
                  "type": "t_struct(UintSet)10452_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(File)16798_storage": {
              "label": "struct IDataLiquidityPool.File",
              "members": [
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proofIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)9980_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)10452_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9980_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable2Step": [
              {
                "contract": "Ownable2StepUpgradeable",
                "label": "_pendingOwner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol:DataLiquidityPoolImplementationV3Mock": {
        "src": "contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol:6",
        "version": {
          "withMetadata": "5d091b99841315ae03e94a4bb6047b7068ce1941eee5a8747e1168248982f3b8",
          "withoutMetadata": "a90c635a55b6a561410d6d352c20ed18640d4befa923a1359fb798fa42255a80",
          "linkedWithoutMetadata": "a90c635a55b6a561410d6d352c20ed18640d4befa923a1359fb798fa42255a80"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "test",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "DataLiquidityPoolImplementationV3Mock",
              "src": "contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol:7"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)105_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.24"
      },
      "contracts/token/DAT.sol:DAT": {
        "src": "contracts/token/DAT.sol:11",
        "version": {
          "withMetadata": "25dbc94d37636c0642deecb2f8dc072d40dfcd331ed4132ae7c0e76cea69ccfd",
          "withoutMetadata": "d1c1398700ca21f6d4c1431764563a31b09d0139a9cf15f4dde4cbde4587417c",
          "linkedWithoutMetadata": "d1c1398700ca21f6d4c1431764563a31b09d0139a9cf15f4dde4cbde4587417c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol:ERC20Votes",
          "@openzeppelin/contracts/governance/utils/Votes.sol:Votes",
          "@openzeppelin/contracts/interfaces/IERC5805.sol:IERC5805",
          "@openzeppelin/contracts/governance/utils/IVotes.sol:IVotes",
          "@openzeppelin/contracts/interfaces/IERC6372.sol:IERC6372",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
          "@openzeppelin/contracts/utils/Nonces.sol:Nonces",
          "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
          "@openzeppelin/contracts/interfaces/IERC5267.sol:IERC5267",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "(string,string,address)",
          "clock()",
          "CLOCK_MODE()",
          "blockListLength()",
          "blockListAt(uint256)",
          "nonces(address)",
          "mint(address,uint256)",
          "changeAdmin(address)",
          "blockMint()",
          "blockAddress(address)",
          "unblockAddress(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DAT",
            "src": "contracts/token/DAT.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:51"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:52"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Nonces",
              "src": "@openzeppelin/contracts/utils/Nonces.sol:14"
            },
            {
              "label": "_delegatee",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Votes",
              "src": "@openzeppelin/contracts/governance/utils/Votes.sol:38"
            },
            {
              "label": "_delegateCheckpoints",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(Trace208)8931_storage)",
              "contract": "Votes",
              "src": "@openzeppelin/contracts/governance/utils/Votes.sol:40"
            },
            {
              "label": "_totalCheckpoints",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(Trace208)8931_storage",
              "contract": "Votes",
              "src": "@openzeppelin/contracts/governance/utils/Votes.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "@openzeppelin/contracts/access/Ownable2Step.sol:20"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "DAT",
              "src": "contracts/token/DAT.sol:14"
            },
            {
              "label": "mintBlocked",
              "offset": 20,
              "slot": "13",
              "type": "t_bool",
              "contract": "DAT",
              "src": "contracts/token/DAT.sol:15"
            },
            {
              "label": "_blockList",
              "offset": 0,
              "slot": "14",
              "type": "t_struct(AddressSet)10295_storage",
              "contract": "DAT",
              "src": "contracts/token/DAT.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Checkpoint208)8936_storage)dyn_storage": {
              "label": "struct Checkpoints.Checkpoint208[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Trace208)8931_storage)": {
              "label": "mapping(address => struct Checkpoints.Trace208)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10295_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9980_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Checkpoint208)8936_storage": {
              "label": "struct Checkpoints.Checkpoint208",
              "members": [
                {
                  "label": "_key",
                  "type": "t_uint48",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_value",
                  "type": "t_uint208",
                  "offset": 6,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Set)9980_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_positions",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trace208)8931_storage": {
              "label": "struct Checkpoints.Trace208",
              "members": [
                {
                  "label": "_checkpoints",
                  "type": "t_array(t_struct(Checkpoint208)8936_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint208": {
              "label": "uint208",
              "numberOfBytes": "26"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    }
  ]
}